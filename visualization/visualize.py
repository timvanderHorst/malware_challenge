import os

import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
def import_data(path):
    if os.path.exists(path + '.npz'):
        return np.load(path + '.npz')['arr_0']
    data = []
    with open(path, 'r') as f:
        l = f.readline()
        while l is not None and len(l) > 0:
            line = list(map(int, l.split(',')))
            data.append(np.array(line))
            l = f.readline()
    data = np.array(data)
    np.savez_compressed(path, data)
    return data

def visualize(dataset, ax, label, pos):
    split = 100
    freq = dataset.sum(axis=0)
    parts = np.array_split(freq, split)
    parts = list(map(lambda p: np.log10(sum(p)), parts))
    indices = np.array_split(np.arange(len(freq)), split)
    indices = list(map(min, indices))
    x_position = np.arange(len(indices))
    x_position = x_position + (0.8/3)*(pos-1)
    ax.bar(x_position, parts, width=0.8/3, label=label, tick_label=indices)
    ax.set_xticklabels(indices, rotation=90)

def compare():
    fig, ax = plt.subplots(figsize=(24, 8))
    benign = import_data('malware_challenge/benign.dat')
    visualize(benign, ax, 'benign', 0)
    del benign
    malicious = import_data('malware_challenge/malicious.dat')
    visualize(malicious, ax, 'malicious', 1)
    del malicious
    adversarial = import_data('malware_challenge/adversarial.dat')
    visualize(adversarial, ax, 'adversarial', 2)
    ax.legend()
    ax.title("Frequency of API calls (binned by index)")
    ax.set_ylabel('Log(API call frequency)')
    ax.set_xlabel('API call index bin start')
    plt.show()

if __name__ == '__main__':
    compare()